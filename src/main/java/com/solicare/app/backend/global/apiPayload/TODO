# 전체적인 응답 구조 수정

- 비즈니스로직(성공/실패)과 예외(오류)를 확실히 분리해야함
- onSuccess -> 비즈니스로직 성공
- onFailure -> 비즈니스로직 실패
- (throw) Exception -> GlobalExceptionHandler에서 처리 -> onError

onSuccess, onFailure, onError는 일관된 구조(T extends ApiResponse)를 response body로 반환
-> 각 상황에 필요한 Interface, Class를 생성, 명확한 역할 분리
-> CustomException이 꼭 필요한 경우 기존의 구조를 상속받아 구현.

- 불필요한 필드 제거
- 상황에 따라 Data는 변경할 수 있도록 제네릭 타입으로 설정
- 메시지, 상태코드 등은 상황에 맞게 설정(Enum 활용)

- ApiResponseUtil 클래스에서 상황에 맞는 응답 객체를 생성하는 메서드 제공