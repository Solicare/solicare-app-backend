name: Test Deploy to AWS Lightsail

on:
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  deployments: write
  statuses: write

jobs:
  build:
    runs-on: self-hosted
    outputs:
      deployment_id: ${{ steps.deployment.outputs.deployment_id }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '21'
      - name: Generate properties from secrets
        shell: bash
        run: |
          echo "jwt.secretKey=$JWT_SECRETKEY" > src/main/resources/configs/auth/jwt.properties
          echo "spring.datasource.url=$SPRING_DATASOURCE_URL" > src/main/resources/configs/database/mariadb.properties
          echo "spring.datasource.username=$SPRING_DATASOURCE_USERNAME" >> src/main/resources/configs/database/mariadb.properties
          echo "spring.datasource.password=$SPRING_DATASOURCE_PASSWORD" >> src/main/resources/configs/database/mariadb.properties
        env:
          JWT_SECRETKEY: ${{ secrets.JWT_SECRET }}
          SPRING_DATASOURCE_URL: ${{ secrets.DB_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}
      - name: Build and Test with Gradle
        shell: bash
        run: |
          chmod +x gradlew
          ./gradlew clean bootJar --info
          JAR_PATH=$(ls build/libs/*.jar | head -n 1)
          cp "$JAR_PATH" solicare.jar
          echo "Packaged: $(ls -l solicare.jar)"

  test:
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '21'
      - name: Test run on port 8081
        shell: bash
        run: |
          set +e
          echo "[INFO] 8081 포트 프로세스 종료 시도"
          lsof -ti:8081 | xargs -r kill
          echo "[INFO] 임시 서버 실행 시작"
          nohup java -jar -Dserver.port=8081 solicare.jar > test_app.log 2>&1 &
          sleep 2
          echo "[INFO] health check 시작"
          for i in {1..10}; do
            if curl -sSf http://localhost:8081/actuator/health > /dev/null; then
              lsof -ti:8081 | xargs -r kill
              cat test_app.log
              rm -f test_app.log
              echo "[SUCCESS] App started successfully on 8081."
              exit 0
            fi
            echo "Waiting for actuator on 8081... ($i)"
            sleep 3
          done
          cat test_app.log
          rm -f test_app.log
          echo "[ERROR] App failed to start on 8081."
          exit 1